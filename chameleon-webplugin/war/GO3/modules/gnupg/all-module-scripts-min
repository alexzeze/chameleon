GO.gnupg.KeysGrid=function(A){if(!A){A={}}A.layout="fit";A.autoScroll=true;A.split=true;A.store=new GO.data.JsonStore({url:GO.settings.modules.gnupg.url+"json.php",baseParams:{task:"keys"},root:"results",id:"fingerprint",totalProperty:"total",fields:["fingerprint","id","uid","type"]});var B=new Ext.grid.ColumnModel([{header:"id",dataIndex:"id"},{header:"uid",dataIndex:"uid"},{header:"type",dataIndex:"type"}]);B.defaultSortable=true;A.cm=B;A.view=new Ext.grid.GridView({autoFill:true,forceFit:true,emptyText:GO.lang.strNoItems});A.sm=new Ext.grid.RowSelectionModel();A.loadMask=true;A.tbar=[{iconCls:"btn-add",text:GO.lang.cmdAdd,cls:"x-btn-text-icon",handler:function(){if(!this.genKeyDialog){this.genKeyDialog=new GO.gnupg.GenKeyDialog();this.genKeyDialog.on("save",function(){this.store.reload()},this)}this.genKeyDialog.show()},scope:this},{iconCls:"btn-add",text:GO.lang.cmdImport,cls:"x-btn-text-icon",handler:function(){if(!this.importKeyDialog){this.importKeyDialog=new GO.gnupg.ImportKeyDialog();this.importKeyDialog.on("save",function(){this.store.reload()},this)}this.importKeyDialog.show()},scope:this},{iconCls:"btn-delete",text:GO.lang.cmdDelete,cls:"x-btn-text-icon",handler:function(){this.deleteSelected()},scope:this},{iconCls:"btn-export",text:GO.lang.cmdExport,cls:"x-btn-text-icon",handler:function(){var C=this.getSelectionModel().getSelected();if(!C){alert(GO.lang.noItemSelected)}else{document.location=GO.settings.modules.gnupg.url+"export.php?fingerprint="+C.get("fingerprint")}},scope:this},{iconCls:"btn-email",text:GO.gnupg.lang.sendPublicKey,cls:"x-btn-text-icon",handler:function(){var C=this.getSelectionModel().getSelected();if(!C){alert(GO.lang.noItemSelected)}else{GO.email.showComposer({loadUrl:GO.settings.modules.gnupg.url+"json.php",loadParams:{task:"send_key",fingerprint:C.get("fingerprint")}})}},scope:this}];GO.gnupg.KeysGrid.superclass.constructor.call(this,A)};Ext.extend(GO.gnupg.KeysGrid,GO.grid.GridPanel,{});GO.gnupg.SecurityDialog=function(A){if(!A){A={}}this.keysGrid=new GO.gnupg.KeysGrid();A.maximizable=true;A.layout="fit";A.modal=false;A.resizable=false;A.width=600;A.height=400;A.closeAction="hide";A.title=GO.gnupg.lang.encryptionSettings;A.items=this.keysGrid;A.buttons=[{text:GO.lang.cmdClose,handler:function(){this.hide()},scope:this}];GO.gnupg.SecurityDialog.superclass.constructor.call(this,A)};Ext.extend(GO.gnupg.SecurityDialog,Ext.Window,{show:function(){this.keysGrid.store.load();GO.gnupg.SecurityDialog.superclass.show.call(this)}});GO.gnupg.GenKeyDialog=function(B){if(!B){B={}}var C,A;this.formPanel=new Ext.FormPanel({cls:"go-form-panel",defaults:{anchor:"100%"},waitMsgTarget:true,autoHeight:true,items:[this.accountCombo=new Ext.form.ComboBox({store:new GO.data.JsonStore({url:BaseHref+"modules/email/json.php",baseParams:{task:"accounts",personal_only:true},fields:["id","email","signature"],root:"results",totalProperty:"total",id:"id"}),fieldLabel:GO.email.lang.from,name:"account_name",displayField:"email",valueField:"id",hiddenName:"account_id",forceSelection:true,triggerAction:"all",mode:"local"}),{id:"gen-key-pass",xtype:"textfield",inputType:"password",name:"passphrase",fieldLabel:GO.lang.strPassword,allowBlank:false},{xtype:"textfield",inputType:"password",fieldLabel:GO.lang.strConfirm,name:"passphrase2",allowBlank:false,vtype:"password",initialPassField:"gen-key-pass"},{xtype:"textfield",fieldLabel:GO.gnupg.lang.comment,name:"comment",allowBlank:false}]});this.formPanel.form.timeout=180;B.maximizable=true;B.layout="fit";B.modal=false;B.resizable=false;B.width=400;B.autoHeight=true;B.closeAction="hide";B.title=GO.gnupg.lang.genKey;B.items=this.formPanel;B.buttons=[{text:GO.lang.cmdOk,handler:function(){this.submitForm()},scope:this},{text:GO.lang.cmdClose,handler:function(){this.hide()},scope:this}];GO.gnupg.GenKeyDialog.superclass.constructor.call(this,B);this.addEvents({save:true})};Ext.extend(GO.gnupg.GenKeyDialog,Ext.Window,{show:function(){this.accountCombo.store.load();this.formPanel.form.reset();GO.gnupg.GenKeyDialog.superclass.show.call(this)},submitForm:function(){var A=Ext.Ajax.timeout;this.formPanel.form.submit({url:GO.settings.modules.gnupg.url+"action.php",params:{task:"gen_key"},waitMsg:GO.lang.waitMsgSave,success:function(B,C){this.fireEvent("save",this);this.hide()},failure:function(B,C){if(C.failureType=="client"){Ext.MessageBox.alert(GO.lang.strError,GO.lang.strErrorsInForm)}else{Ext.MessageBox.alert(GO.lang.strError,C.result.feedback)}},scope:this})}});GO.gnupg.ImportKeyDialog=function(A){if(!A){A={}}this.formPanel=new Ext.FormPanel({fileUpload:true,cls:"go-form-panel",defaults:{anchor:"100%"},waitMsgTarget:true,autoHeight:true,items:[new GO.form.UploadFile({inputName:"keys",addText:GO.gnupg.lang.selectKeyFile})]});A.maximizable=true;A.layout="fit";A.modal=false;A.resizable=false;A.width=400;A.autoHeight=true;A.closeAction="hide";A.title=GO.gnupg.lang.genKey;A.items=this.formPanel;A.buttons=[{text:GO.lang.cmdOk,handler:function(){this.submitForm()},scope:this},{text:GO.lang.cmdClose,handler:function(){this.hide()},scope:this}];GO.gnupg.ImportKeyDialog.superclass.constructor.call(this,A);this.addEvents({save:true})};Ext.extend(GO.gnupg.ImportKeyDialog,Ext.Window,{submitForm:function(){this.formPanel.form.submit({url:GO.settings.modules.gnupg.url+"action.php",params:{task:"import_key"},waitMsg:GO.lang.waitMsgSave,success:function(A,B){this.fireEvent("save",this);this.hide()},failure:function(A,B){if(B.failureType=="client"){Ext.MessageBox.alert(GO.lang.strError,GO.lang.strErrorsInForm)}else{Ext.MessageBox.alert(GO.lang.strError,B.result.feedback)}},scope:this})}});GO.gnupg.SignKeyDialog=function(A){if(!A){A={}}this.formPanel=new Ext.FormPanel({cls:"go-form-panel",defaults:{anchor:"100%"},waitMsgTarget:true,autoHeight:true,baseParams:{public_key:""},items:[this.keysCombo=new Ext.form.ComboBox({store:new GO.data.JsonStore({url:GO.settings.modules.gnupg.url+"json.php",baseParams:{task:"private_keys"},root:"results",id:"fingerprint",totalProperty:"total",fields:["fingerprint","id","uid","type"]}),fieldLabel:GO.gnupg.lang.key,displayField:"uid",valueField:"fingerprint",hiddenName:"private_key",forceSelection:true,triggerAction:"all",mode:"local"}),{xtype:"textfield",inputType:"password",name:"passphrase",fieldLabel:GO.lang.strPassword}]});A.maximizable=true;A.layout="fit";A.modal=false;A.resizable=false;A.width=400;A.autoHeight=true;A.closeAction="hide";A.title=GO.gnupg.lang.signKey;A.items=this.formPanel;A.buttons=[{text:GO.lang.cmdOk,handler:function(){this.submitForm()},scope:this},{text:GO.lang.cmdClose,handler:function(){this.hide()},scope:this}];GO.gnupg.SignKeyDialog.superclass.constructor.call(this,A);this.addEvents({save:true})};Ext.extend(GO.gnupg.SignKeyDialog,Ext.Window,{show:function(A){this.keysCombo.store.load();this.formPanel.form.reset();this.formPanel.baseParams.public_key=A;GO.gnupg.SignKeyDialog.superclass.show.call(this)},submitForm:function(){this.formPanel.form.submit({url:GO.settings.modules.gnupg.url+"action.php",params:{task:"sign_key"},waitMsg:GO.lang.waitMsgSave,success:function(A,B){this.fireEvent("save",this);this.hide()},failure:function(A,B){if(B.failureType=="client"){Ext.MessageBox.alert(GO.lang.strError,GO.lang.strErrorsInForm)}else{Ext.MessageBox.alert(GO.lang.strError,B.result.feedback)}},scope:this})}});GO.gnupg.PasswordDialog=function(A){if(!A){A={}}A.modal=true;Ext.apply(this,A);this.formPanel=new Ext.FormPanel({labelWidth:120,url:"action.php",defaultType:"textfield",autoHeight:true,waitMsgTarget:true,bodyStyle:"padding:5px 10px 5px 10px",items:[{fieldLabel:GO.lang.strPassword,name:"password",inputType:"password",allowBlank:false,anchor:"100%"}]});GO.gnupg.PasswordDialog.superclass.constructor.call(this,{layout:"fit",autoHeight:true,width:400,resizable:false,closeAction:"hide",title:GO.gnupg.lang.decryptPasswordRequired,closable:false,focus:function(){this.formPanel.form.findField("password").focus(true)}.createDelegate(this),items:[this.formPanel],buttons:[{text:GO.lang.cmdOk,handler:function(){this.pressButton("ok")},scope:this},{text:GO.lang.cmdCancel,handler:function(){this.pressButton("cancel")},scope:this}],keys:[{key:Ext.EventObject.ENTER,fn:function(){this.pressButton("ok")},scope:this}]});this.addEvents({buttonpressed:true})};Ext.extend(GO.gnupg.PasswordDialog,Ext.Window,{pressButton:function(A){this.fireEvent("buttonpressed",A,this.formPanel.form.findField("password").getValue());this.formPanel.form.reset();this.hide()}});